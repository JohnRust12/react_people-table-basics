{"version":3,"sources":["components/Navigation/Navigation.tsx","components/Navbar/Navbar.tsx","App.tsx","api.ts","components/Loader/Loader.tsx","components/PerrsonLink/PersonLink.tsx","components/Persona/Persona.tsx","components/PeopleTable/PeopleTable.tsx","pages/GetParent.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","index.tsx"],"names":["Navigation","to","text","className","isActive","classNames","Navbar","React","memo","role","App","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","Persona","useParams","isSelected","born","died","mother","motherName","father","fatherName","PeopleTable","people","map","getParent","parentName","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoadError","setIsLoadError","useEffect","loadedPeople","preparedPeople","catch","finally","length","HomePage","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.dfea8a17.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport type Props = {\n  to: string;\n  text: string;\n};\n\nexport const Navigation: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { Navigation } from '../Navigation/Navigation';\n\nexport const Navbar = React.memo(\n  () => {\n    return (\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Navigation to=\"/\" text=\"Home\" />\n            <Navigation to=\"people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n    );\n  },\n);\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = React.memo(\n  ({ person }) => (\n    <>\n      <Link\n        to={`../${person.slug}`}\n        className={classNames('todo', {\n          'has-text-danger': person.sex === 'f',\n        })}\n      >\n        {person.name}\n      </Link>\n    </>\n  ),\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PerrsonLink/PersonLink';\n\ntype Props = {\n  person: Person;\n};\n\nexport const Persona: React.FC<Props> = React.memo(\n  ({ person }) => {\n    const { slug = '' } = useParams();\n    const isSelected = (person.slug === slug);\n\n    return (\n      <tr\n        data-cy=\"person\"\n        className={classNames({\n          'has-background-warning': isSelected,\n        })}\n      >\n        <td>\n          <PersonLink person={person} />\n        </td>\n\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n\n        <td>\n          {person.mother\n            ? <PersonLink person={person.mother} />\n            : person.motherName || '-'}\n        </td>\n        <td>\n          {person.father\n            ? <PersonLink person={person.father} />\n            : person.fatherName || '-'}\n        </td>\n      </tr>\n    );\n  },\n);\n","import React from 'react';\nimport { Person } from '../../types';\nimport { Persona } from '../Persona/Persona';\n\ntype Props = {\n  people: Person [];\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo(\n  ({ people }) => (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <Persona\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  ),\n);\n","import { Person } from '../types';\n\nexport const getParent = (\n  people: Person[],\n  parentName: string | null,\n) => {\n  return people.find(person => person.name === parentName) || null;\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\nimport { Person } from '../types';\nimport { getParent } from './GetParent';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadError, setIsLoadError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(loadedPeople => {\n        const preparedPeople = loadedPeople.map(person => ({\n          ...person,\n          mother: getParent(loadedPeople, person.motherName),\n          father: getParent(loadedPeople, person.fatherName),\n        }));\n\n        setPeople(preparedPeople);\n      })\n      .catch(() => setIsLoadError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <PeopleTable people={people} />\n          )}\n\n          {isLoadError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !people.length && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = React.memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = React.memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </HashRouter>,\n  );\n"],"sourceRoot":""}